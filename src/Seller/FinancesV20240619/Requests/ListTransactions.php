<?php

/**
 * This file is auto-generated by Saloon SDK Generator
 * Generator: SellingPartnerApi\Generator\Generators\RequestGenerator
 * Do not modify it directly.
 */

declare(strict_types=1);

namespace SellingPartnerApi\Seller\FinancesV20240619\Requests;

use Exception;
use Saloon\Enums\Method;
use Saloon\Http\Response;
use SellingPartnerApi\Request;
use SellingPartnerApi\Seller\FinancesV20240619\Responses\ErrorList;
use SellingPartnerApi\Seller\FinancesV20240619\Responses\ListTransactionsResponse;

/**
 * listTransactions
 */
class ListTransactions extends Request
{
    protected Method $method = Method::GET;

    /**
     * @param  \DateTimeInterface  $postedAfter  The response includes financial events posted after (or on) this date. This date must be in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format. The date-time must be more than two minutes before the time of the request.
     * @param  ?\DateTimeInterface  $postedBefore  The response includes financial events posted before (but not on) this date. This date must be in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format.
     *
     * The date-time must be later than `PostedAfter` and more than two minutes before the request was submitted. If `PostedAfter` and `PostedBefore` are more than 180 days apart, the response is empty.
     *
     * **Default:** Two minutes before the time of the request.
     * @param  ?string  $marketplaceId  The ID of the marketplace from which you want to retrieve transactions.
     * @param  ?string  $nextToken  The response includes `nextToken` when the number of results exceeds the specified `pageSize` value. To get the next page of results, call the operation with this token and include the same arguments as the call that produced the token. To get a complete list, call this operation until `nextToken` is null. Note that this operation can return empty pages.
     */
    public function __construct(
        protected \DateTimeInterface $postedAfter,
        protected ?\DateTimeInterface $postedBefore = null,
        protected ?string $marketplaceId = null,
        protected ?string $nextToken = null,
    ) {}

    public function resolveEndpoint(): string
    {
        return '/finances/2024-06-19/transactions';
    }

    public function createDtoFromResponse(Response $response): ListTransactionsResponse|ErrorList
    {
        $status = $response->status();
        $responseCls = match ($status) {
            200 => ListTransactionsResponse::class,
            400, 403, 404, 415, 413, 429, 500, 503 => ErrorList::class,
            default => throw new Exception("Unhandled response status: {$status}")
        };

        return $responseCls::deserialize($response->json());
    }

    public function defaultQuery(): array
    {
        return array_filter([
            'postedAfter' => $this->postedAfter?->format('Y-m-d\TH:i:s\Z'),
            'postedBefore' => $this->postedBefore?->format('Y-m-d\TH:i:s\Z'),
            'marketplaceId' => $this->marketplaceId,
            'nextToken' => $this->nextToken,
        ]);
    }
}
