<?php

/**
 * This file is auto-generated by Saloon SDK Generator
 * Generator: SellingPartnerApi\Generator\Generators\RequestGenerator
 * Do not modify it directly.
 */

declare(strict_types=1);

namespace SellingPartnerApi\Seller\InvoicesV20240619\Requests;

use Exception;
use Saloon\Enums\Method;
use Saloon\Http\Response;
use SellingPartnerApi\Request;
use SellingPartnerApi\Seller\InvoicesV20240619\Responses\ErrorList;
use SellingPartnerApi\Seller\InvoicesV20240619\Responses\GetInvoicesExportsResponse;

/**
 * getInvoicesExports
 */
class GetInvoicesExports extends Request
{
    protected Method $method = Method::GET;

    /**
     * @param  string  $marketplaceId  The returned exports match the specified marketplace.
     * @param  ?\DateTimeInterface  $dateStart  The earliest export creation date and time for exports that you want to include in the response. Values are in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format. The default is 30 days ago.
     * @param  ?string  $nextToken  The response includes `nextToken` when the number of results exceeds the specified `pageSize` value. To get the next page of results, call the operation with this token and include the same arguments as the call that produced the token. To get a complete list, call this operation until `nextToken` is null. Note that this operation can return empty pages.
     * @param  ?int  $pageSize  The maximum number of invoices to return in a single call.
     *
     * Minimum: 1
     *
     * Maximum: 100
     * @param  ?\DateTimeInterface  $dateEnd  The latest export creation date and time for exports that you want to include in the response. Values are in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format. The default value is the time of the request.
     * @param  ?string  $status  Return exports matching the status specified.
     */
    public function __construct(
        protected string $marketplaceId,
        protected ?\DateTimeInterface $dateStart = null,
        protected ?string $nextToken = null,
        protected ?int $pageSize = null,
        protected ?\DateTimeInterface $dateEnd = null,
        protected ?string $status = null,
    ) {}

    public function resolveEndpoint(): string
    {
        return '/tax/invoices/2024-06-19/exports';
    }

    public function createDtoFromResponse(Response $response): GetInvoicesExportsResponse|ErrorList
    {
        $status = $response->status();
        $responseCls = match ($status) {
            200 => GetInvoicesExportsResponse::class,
            400, 401, 403, 404, 413, 415, 429, 500, 503 => ErrorList::class,
            default => throw new Exception("Unhandled response status: {$status}")
        };

        return $responseCls::deserialize($response->json());
    }

    public function defaultQuery(): array
    {
        return array_filter([
            'marketplaceId' => $this->marketplaceId,
            'dateStart' => $this->dateStart?->format('Y-m-d\TH:i:s\Z'),
            'nextToken' => $this->nextToken,
            'pageSize' => $this->pageSize,
            'dateEnd' => $this->dateEnd?->format('Y-m-d\TH:i:s\Z'),
            'status' => $this->status,
        ]);
    }
}
