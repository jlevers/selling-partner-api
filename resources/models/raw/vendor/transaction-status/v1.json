{
    "openapi": "3.0.1",
    "info": {
        "title": "Selling Partner API for Retail Procurement Transaction Status",
        "description": "The Selling Partner API for Retail Procurement Transaction Status provides programmatic access to status information on specific asynchronous POST transactions for vendors.",
        "contact": {
            "name": "Selling Partner API Developer Support",
            "url": "https://sellercentral.amazon.com/gp/mws/contactus.html"
        },
        "license": {
            "name": "Apache License 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0"
        },
        "version": "v1"
    },
    "servers": [
        {
            "url": "https://sellingpartnerapi-na.amazon.com/"
        }
    ],
    "paths": {
        "/vendor/transactions/v1/transactions/{transactionId}": {
            "get": {
                "tags": [
                    "vendorTransaction"
                ],
                "description": "Returns the status of the transaction that you specify.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 10 | 20 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
                "operationId": "getTransaction",
                "parameters": [
                    {
                        "name": "transactionId",
                        "in": "path",
                        "description": "The GUID provided by Amazon in the 'transactionId' field in response to the post request of a specific transaction.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetTransactionResponse"
                                },
                                "example": {
                                    "payload": {
                                        "transactionStatus": {
                                            "transactionId": "20190108091302-6ca0ac50-d06e-45f5-a1e2-eb448eadac50",
                                            "status": "Processing"
                                        }
                                    }
                                }
                            }
                        },
                        "x-amazon-spds-sandbox-behaviors": [
                            {
                                "request": {
                                    "parameters": {
                                        "transactionId": {
                                            "value": "20190904190535-eef8cad8-418e-4ed3-ac72-789e2ee6214a"
                                        }
                                    }
                                },
                                "response": {
                                    "payload": {
                                        "transactionStatus": {
                                            "transactionId": "20190904190535-eef8cad8-418e-4ed3-ac72-789e2ee6214a",
                                            "status": "Processing"
                                        }
                                    }
                                }
                            },
                            {
                                "request": {
                                    "parameters": {
                                        "transactionId": {
                                            "value": "20190918190535-eef8cad8-418e-456f-ac72-789e2ee6813c"
                                        }
                                    }
                                },
                                "response": {
                                    "payload": {
                                        "transactionStatus": {
                                            "transactionId": "20190918190535-eef8cad8-418e-456f-ac72-789e2ee6813c",
                                            "status": "Failure",
                                            "errors": [
                                                {
                                                    "code": "INVALID_ORDER_ID",
                                                    "message": "Invalid order ID."
                                                }
                                            ]
                                        }
                                    }
                                }
                            },
                            {
                                "request": {
                                    "parameters": {}
                                },
                                "response": {
                                    "payload": {
                                        "transactionStatus": {
                                            "transactionId": "20190904190535-eef8cad8-418e-4ed3-ac72-789e2ee6214a",
                                            "status": "Processing"
                                        }
                                    }
                                }
                            }
                        ]
                    },
                    "400": {
                        "description": "Request has missing or not valid parameters and cannot be parsed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetTransactionResponse"
                                }
                            }
                        },
                        "x-amazon-spds-sandbox-behaviors": [
                            {
                                "request": {
                                    "parameters": {
                                        "transactionId": {
                                            "value": "Tran0904190535-eef8cad8-418e-4ed3-ac72-789e2ee6214a"
                                        }
                                    }
                                },
                                "response": {
                                    "errors": [
                                        {
                                            "code": "InvalidInput",
                                            "message": "Invalid transmission ID.",
                                            "details": ""
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "401": {
                        "description": "The request's authorization header is not formatted correctly or does not contain a valid token.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetTransactionResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetTransactionResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified resource does not exist.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetTransactionResponse"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "The request payload is in an unsupported format.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetTransactionResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "The frequency of requests was greater than allowed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetTransactionResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetTransactionResponse"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Temporary overloading or maintenance of the server.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetTransactionResponse"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "GetTransactionResponse": {
                "type": "object",
                "properties": {
                    "payload": {
                        "$ref": "#/components/schemas/TransactionStatus"
                    },
                    "errors": {
                        "$ref": "#/components/schemas/ErrorList"
                    }
                },
                "description": "The response schema for the `getTransaction` operation."
            },
            "TransactionStatus": {
                "type": "object",
                "properties": {
                    "transactionStatus": {
                        "$ref": "#/components/schemas/Transaction"
                    }
                },
                "description": "Represents the status of a transaction."
            },
            "Transaction": {
                "required": [
                    "status",
                    "transactionId"
                ],
                "type": "object",
                "properties": {
                    "transactionId": {
                        "type": "string",
                        "description": "The unique identifier returned in the 'transactionId' field in response to the post request of a specific transaction."
                    },
                    "status": {
                        "type": "string",
                        "description": "Current processing status of the transaction.",
                        "enum": [
                            "Failure",
                            "Processing",
                            "Success"
                        ],
                        "x-docgen-enum-table-extension": [
                            {
                                "value": "Failure",
                                "description": "Transaction has failed."
                            },
                            {
                                "value": "Processing",
                                "description": "Transaction is in process."
                            },
                            {
                                "value": "Success",
                                "description": "Transaction has completed successfully."
                            }
                        ]
                    },
                    "errors": {
                        "$ref": "#/components/schemas/ErrorList"
                    }
                },
                "description": "The transaction status."
            },
            "ErrorList": {
                "type": "array",
                "description": "A list of error responses returned when a request is unsuccessful.",
                "items": {
                    "$ref": "#/components/schemas/Error"
                }
            },
            "Error": {
                "required": [
                    "code",
                    "message"
                ],
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "description": "An error code that identifies the type of error that occurred."
                    },
                    "message": {
                        "type": "string",
                        "description": "A message that describes the error condition."
                    },
                    "details": {
                        "type": "string",
                        "description": "Additional details that can help the caller understand or fix the issue."
                    }
                },
                "description": "Error response returned when the request is unsuccessful."
            }
        }
    },
    "x-original-swagger-version": "2.0"
}